name: Continuous Integration

on: [push]

jobs:
  backend:
    runs-on: ubuntu-latest
    env:
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: db
      SECRET_KEY: SomeSecret
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 5
      REFRESH_TOKEN_EXPIRE_DAYS: 100
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Setup python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: '3.10'
          cache: "poetry"

      - name: Install dependencies
        run: |
          cd backend
          poetry env use "3.10"
          poetry install

      - name: Formatters
        run: |
          cd backend
          poetry run black . --check
          poetry run isort . -c

      - name: Linters
        run: |
          cd backend
          poetry run mypy .
          poetry run flake8 .
          poetry run pylint app/

      - name: Tests
        run: |
          cd backend
          poetry run pytest .

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
          cache-dependency-path: frontend/yarn.lock

      - name: Install dependencies
        run: |
          cd frontend
          yarn install --frozen-lockfile

      - name: Formatters
        run: |
          cd frontend
          yarn run format:check

      - name: Linters
        run: |
          cd frontend
          yarn run lint
          yarn run typecheck

      - name: Tests
        run: |
          cd frontend
          yarn run jest
